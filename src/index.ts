import express, { type Router } from "express";
import cors from "cors";
import {
  modelRestEndpoints,
  addController,
  bearerTokenMiddleware,
  addContext,
  buildRoute,
} from "simply-served";
import todoDb from "./todoDb";
import { z } from "zod";
import { TodoDb } from "./types";

const app = express();

app.use(express.json());
app.use(cors()); // Disable cors

type ServerCtx = {
  db: TodoDb;
  auth: {
    userId: string;
  };
};

app.use(addContext<ServerCtx>({ db: todoDb }));

app.use(bearerTokenMiddleware(""));

addController<ServerCtx>(app, {
  path: "/user",
  routes: modelRestEndpoints({
    validator: z.object({
      _id: z.uuid(),
      name: z.string(),
    }),
    collection: (db) => db.user,
    permissions: {
      create: { type: "publicAccess" },
      read: { type: "publicAccess" },
      modify: {
        type: "modelAuth",
        check: (auth) => ({ _id: { Equal: auth.userId } }),
      },
      delete: { type: "notAllowed" },
    },
  }),
});

addController<ServerCtx>(app, {
  path: "/todo",
  routes: {
    //  Autogenerated rest endpoints for the Todo model
    ...modelRestEndpoints({
      collection: (db) => db.todo,
      validator: z.object({
        _id: z.uuid(),
        todoItem: z.string(),
        owner: z.uuid(),
        done: z.boolean().default(true),
      }),
      permissions: {
        create: { type: "publicAccess" },
        read: { type: "publicAccess" },
        modify: { type: "publicAccess" },
        delete: { type: "publicAccess" },
      },
    }),
    // Custom route for getting the todos of the authenticated user
    myTodos: buildRoute<ServerCtx>("get")
      .path("/my-todos")
      .withAuth()
      .build(async (req, res, auth) => {
        const myTodos = await req.db.todo.findMany({
          condition: { owner: { Equal: auth.userId } },
        });
        return res.status(200).json(myTodos);
      }),
  },
});

app.use("/", async (_req, res): Promise<any> => {
  return res.status(200).json("Welcome to my server!");
});

app.listen(8080, () => {
  console.info("Listening on port 8080\n");
  console.info(`Check out todo.html to interact with the server at:`);
  console.info(__dirname.split("src").at(0) + "frontend/todo.html");
});
